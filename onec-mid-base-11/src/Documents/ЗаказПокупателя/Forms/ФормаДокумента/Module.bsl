
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды  
	
	//{{astaroth
	ПолеСогласованнаяСкидка =  Элементы.Вставить("УР_СогласованнаяСкидка", Тип("ПолеФормы"), Элементы.ГруппаШапкаЛево);
	ПолеСогласованнаяСкидка.ПутьКДанным =  "Объект.УР_СогласованнаяСкидка";
	ПолеСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;  
	ПолеСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "УР_СогласованнаяСкидкаПриИзменении"); 
	
	
	Команда = Команды.Добавить("УР_ПересчитатьТаблицу");
	Команда.Заголовок = "Пересчитать таблицу";
	Команда.Действие = "УР_КомандаПересчитатьТаблицу";
	
	Кнопка = Элементы.Добавить("УР_ПересчитатьТаблицу", Тип("КнопкаФормы"), Элементы.ГруппаШапкаЛево);
	Кнопка.ИмяКоманды = "УР_ПересчитатьТаблицу";
	
	
	//astaroth}}
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура УР_СогласованнаяСкидкаПриИзменении(Элемент)
	//{{astaroth	
	  
		
		Ответ = Ждать ВопросАсинх("Изменен процент скидки, пересчитать таблицу товара?", РежимДиалогаВопрос.ДаНет); 
		
		Для Каждого Cтрока из Объект.Товары цикл
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				УР_СогласованнаяСкидкаРасчетТовары(Cтрока);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого Cтрока из Объект.Услуги цикл
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				УР_СогласованнаяСкидкаРасчетУслуги(Cтрока);
			КонецЕсли;
		КонецЦикла;
		
		Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
		
	
	//astaroth}}
КонецПроцедуры

&НаКлиенте
Процедура УР_СогласованнаяСкидкаРасчетТовары(Cтрока)
	//{{astaroth
	Если Объект.УР_СогласованнаяСкидка = 100 Тогда 
		Cтрока.Сумма = 0;
	Иначе 
		Cтрока.Сумма = (Cтрока.Цена * Cтрока.Количество) - ((Cтрока.Цена * Cтрока.Количество) * Объект.УР_СогласованнаяСкидка / 100);	
	КонецЕсли;
	//astaroth}}
КонецПроцедуры

&НаКлиенте
Процедура УР_СогласованнаяСкидкаРасчетУслуги(Cтрока)
	//{{astaroth
	Если Объект.УР_СогласованнаяСкидка = 100 Тогда 
		Cтрока.Сумма = 0;
	Иначе 
		Cтрока.Сумма = (Cтрока.Цена * Cтрока.Количество) - ((Cтрока.Цена * Cтрока.Количество) * Объект.УР_СогласованнаяСкидка / 100);	
	КонецЕсли;
	//astaroth}}
КонецПроцедуры 

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры 


&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//{{astaroth   
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	Если Объект.УР_СогласованнаяСкидка = 0 Тогда 
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	Иначе
		ТекущиеДанные.Сумма = (ТекущиеДанные.Цена * ТекущиеДанные.Количество) - ((ТекущиеДанные.Цена * ТекущиеДанные.Количество) * Объект.УР_СогласованнаяСкидка / 100); 
	КонецЕсли;
	
	//astaroth}}
	
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура УР_КомандаПересчитатьТаблицу(Команда) 
	
	//{{astaroth	
	
		Для Каждого Cтрока из Объект.Товары цикл
			УР_СогласованнаяСкидкаРасчетТовары(Cтрока)
		КонецЦикла;  
		Для Каждого Cтрока из Объект.Услуги цикл
			УР_СогласованнаяСкидкаРасчетУслуги(Cтрока)
		КонецЦикла;
		
		Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма"); 
	
	
	//astaroth}}
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
